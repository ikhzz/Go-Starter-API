package main

import (
	"io"
	"log"
	"os"
	"time"

	"github.com/gin-gonic/gin"
	"github.com/spf13/viper"
	"starterapi/config"

	commonRepository "starterapi/common/repository"
	commonUsecase "starterapi/common/usecase"

	swaggerFiles "github.com/swaggo/files"     // swagger embed files
	ginSwagger "github.com/swaggo/gin-swagger" // gin-swagger middleware
	"starterapi/docs"                          // docs is generated by Swag CLI, you have to import it.
	"starterapi/routes"
)

// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization
// @description Type "Bearer" followed by a space and JWT token.
func main() {
	// setup log
	f, _ := os.Create("./log/service.log")
	mw := io.MultiWriter(os.Stdout, f)
	log.SetOutput(mw)
	// setup confit
	viper.SetConfigFile("config.json")
	err := viper.ReadInConfig()
	if err != nil {
		panic(err)
	}
	// programmatically set swagger info
	docs.SwaggerInfo.Title = "Starter Project"
	docs.SwaggerInfo.Description = "Golang Starter Project"
	docs.SwaggerInfo.Version = "1.0"
	docs.SwaggerInfo.Host = "localhost" + viper.GetString("address")
	docs.SwaggerInfo.BasePath = "/v1"
	docs.SwaggerInfo.Schemes = []string{"http", "https"}
	// general timout
	timeoutContext := time.Duration(viper.GetInt("timeout.context")) * time.Second
	// server setup
	appPort := viper.GetString("address")
	if appPort == "" {
		appPort = ":6060"
	}
	// db setup
	connMysql := config.InitMysql()
	// connMonggo := db.InitMonggoDB()

	gin.SetMode(gin.ReleaseMode)
	router := gin.New()
	// router.LoadHTMLGlob("templates/**/*")

	// common function
	cmnu := commonRepository.NewCommonRepository(connMysql)
	cmnr := commonUsecase.NewCommonUsecase(timeoutContext, cmnu)

	router.Use(gin.Recovery())
	router.Use(cmnr.PanicCatcher(mw))
	router.Use(cmnr.CustomLogger(mw))

	routes.InitRoutes(router, connMysql, cmnr)
	router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	log.Println("router run :", appPort)
	router.Run(appPort)
	log.Println("router exit")
}
